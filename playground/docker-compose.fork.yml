version: "3.9"
services:
  chain:
    image: ghcr.io/foundry-rs/foundry:latest
    restart: always
    entrypoint: /usr/local/bin/anvil
    command: --fork-url ${ETH_RPC_URL} --block-time 12
    environment:
      - ANVIL_IP_ADDR=0.0.0.0
    ports:
      - 8545:8545
    healthcheck:
      # The healthcheck is actually a little hack that replaces the allow-list manager
      # with simple bytecode that always returns a solidity `true` value, alleviating
      # the requirement to register a solver's private key for the sake of testing on
      # a fork.
      test: [ "CMD-SHELL", "
          response=$$(wget -qO- --header='Content-Type: application/json' --post-data='{\"jsonrpc\":\"2.0\", \"method\":\"eth_blockNumber\", \"params\":[], \"id\":1}' http://127.0.0.1:8545);
          block=$$(echo $$response | sed -n 's/.*\"result\":\"\\([^\"\\]*\\)\".*/\\1/p');
          if [ -n \"$$block\" ] && [ \"$$block\" != \"0x0\" ] && [ \"$$block\" != \"null\" ]; then
            /usr/local/bin/cast rpc -r http://127.0.0.1:8545 anvil_setCode 0x2c4c28DDBdAc9C5E7055b4C863b72eA0149D8aFE 0x600160005260206000F3;
            exit 0;
          else
            exit 1;
          fi;
        " ]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST_AUTH_METHOD=trust
    command: -d postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080
    depends_on:
      - db

  db-migrations:
    build:
      context: ../
      target: migrations
      dockerfile: ./Dockerfile
    restart: on-failure
    environment:
      - FLYWAY_URL=jdbc:postgresql://db/?user=${POSTGRES_USER}&password=${POSTGRES_PASSWORD}
    depends_on:
      - db

  orderbook:
    build:
      context: ../
      target: orderbook
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - NODE_URL=http://chain:8545
      - DB_URL=postgres://db:5432/?user=${POSTGRES_USER}&password=${POSTGRES_PASSWORD}
      - ACCOUNT_BALANCES_SIMULATION=true
      - ACCOUNT_BALANCES_SIMULATOR=Web3
      - SIMULATION_NODE_URL=http://chain:8545
      - EIP1271_SKIP_CREATION_VALIDATION=true
      - ENABLE_EIP1271_ORDERS=true
      - PRICE_ESTIMATORS=None
      - PRICE_ESTIMATION_DRIVERS=baseline|http://driver/baseline
      - NATIVE_PRICE_ESTIMATORS=baseline|http://driver/baseline
      - DRIVERS=baseline|http://driver/baseline
      - BIND_ADDRESS=0.0.0.0:80
      - CHAIN_ID=$CHAIN
      - BASELINE_SOURCES=None
      - RUST_BACKTRACE=1
      - TOML_TRACE_ERROR=1
    depends_on:
      - db-migrations
    ports:
      - 8080:80

  autopilot:
    build:
      context: ../
      target: autopilot
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - DB_URL=postgres://db:5432/?user=${POSTGRES_USER}&password=${POSTGRES_PASSWORD}
      - LOG_FILTER=warn,autopilot=trace,shared=info,shared::price_estimation=debug
      - NODE_URL=http://chain:8545
      - SIMULATION_NODE_URL=http://chain:8545
      - SETTLE_INTERVAL=15s
      - GAS_ESTIMATORS=Native,Web3
      - PRICE_ESTIMATORS=None
      - NATIVE_PRICE_ESTIMATORS=baseline
      - BLOCK_STREAM_POLL_INTERVAL=1s
      - NATIVE_PRICE_CACHE_MAX_UPDATE_SIZE=100
      - NATIVE_PRICE_CACHE_MAX_AGE=20m
      - SOLVER_TIME_LIMIT=5
      - PRICE_ESTIMATION_DRIVERS=baseline|http://driver/baseline
      - NATIVE_PRICE_ESTIMATORS=baseline|http://driver/baseline
      - DRIVERS=baseline|http://driver/baseline
      - SKIP_EVENT_SYNC=true
      - BASELINE_SOURCES=None
      - RUST_BACKTRACE=1
      - TOML_TRACE_ERROR=1
    depends_on:
      orderbook:
        condition: service_started
      chain:
        condition: service_healthy

  driver:
    build:
      context: ../
      target: driver
      dockerfile: ./Dockerfile
    restart: always
    command: --config /driver.toml
    environment:
      - ETHRPC=http://chain:8545
      - ADDR=0.0.0.0:80
      - RUST_BACKTRACE=1
      - TOML_TRACE_ERROR=1
    volumes:
      - ./driver.toml:/driver.toml
    ports:
      - 9000:80
    depends_on:
      chain:
        condition: service_healthy

  # baseline (solver engine)
  baseline:
    build:
      context: ../
      target: solvers
      dockerfile: ./Dockerfile
    restart: always
    command: baseline --config /baseline.toml
    environment:
      - ADDR=0.0.0.0:80
      - LOG=solvers=trace,shared=trace
      - RUST_BACKTRACE=1
      - TOML_TRACE_ERROR=1
    volumes:
      - ./baseline.toml:/baseline.toml
    ports:
      - 9001:80

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.cowswap
      args:
        - CHAIN=$CHAIN
        - ETH_RPC_URL=http://127.0.0.1:8545
    ports:
      - 8000:80

  explorer:
    build:
      context: .
      dockerfile: Dockerfile.explorer
      args:
        - CHAIN=$CHAIN
        - ETH_RPC_URL=http://127.0.0.1:8545
    ports:
      - 8001:80

volumes:
  postgres:

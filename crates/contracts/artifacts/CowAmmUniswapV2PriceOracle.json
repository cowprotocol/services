{"abi":[{"type":"function","name":"getPrice","inputs":[{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"priceNumerator","type":"uint256","internalType":"uint256"},{"name":"priceDenominator","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":"0x6080604052348015600e575f80fd5b506105468061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063355efdd91461002d575b5f80fd5b61004061003b366004610386565b610059565b6040805192835260208301919091520160405180910390f35b5f808061006884860186610411565b9050805f015173ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156100b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100da91906104a2565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff1691505080935081945050505f815f015173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610156573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061017a91906104ee565b90505f825f015173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ed91906104ee565b90508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361022757929392905b8173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146102c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f7261636c653a20696e76616c696420746f6b656e300000000000000000000060448201526064015b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f7261636c653a20696e76616c696420746f6b656e310000000000000000000060448201526064016102b8565b50505094509492505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610383575f80fd5b50565b5f805f8060608587031215610399575f80fd5b84356103a481610362565b935060208501356103b481610362565b9250604085013567ffffffffffffffff808211156103d0575f80fd5b818701915087601f8301126103e3575f80fd5b8135818111156103f1575f80fd5b886020828501011115610402575f80fd5b95989497505060200194505050565b5f60208284031215610421575f80fd5b6040516020810181811067ffffffffffffffff82111715610469577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604052823561047781610362565b81529392505050565b80516dffffffffffffffffffffffffffff8116811461049d575f80fd5b919050565b5f805f606084860312156104b4575f80fd5b6104bd84610480565b92506104cb60208501610480565b9150604084015163ffffffff811681146104e3575f80fd5b809150509250925092565b5f602082840312156104fe575f80fd5b815161050981610362565b939250505056fea26469706673582212201fe6ad4d6b89d204db5394bdedef23d10ed8c7e4f83be4c5fe14dcc09470223464736f6c63430008190033","deployedBytecode":"0x608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063355efdd91461002d575b5f80fd5b61004061003b366004610386565b610059565b6040805192835260208301919091520160405180910390f35b5f808061006884860186610411565b9050805f015173ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156100b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100da91906104a2565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff1691505080935081945050505f815f015173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610156573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061017a91906104ee565b90505f825f015173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ed91906104ee565b90508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361022757929392905b8173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146102c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f7261636c653a20696e76616c696420746f6b656e300000000000000000000060448201526064015b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f7261636c653a20696e76616c696420746f6b656e310000000000000000000060448201526064016102b8565b50505094509492505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610383575f80fd5b50565b5f805f8060608587031215610399575f80fd5b84356103a481610362565b935060208501356103b481610362565b9250604085013567ffffffffffffffff808211156103d0575f80fd5b818701915087601f8301126103e3575f80fd5b8135818111156103f1575f80fd5b886020828501011115610402575f80fd5b95989497505060200194505050565b5f60208284031215610421575f80fd5b6040516020810181811067ffffffffffffffff82111715610469577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604052823561047781610362565b81529392505050565b80516dffffffffffffffffffffffffffff8116811461049d575f80fd5b919050565b5f805f606084860312156104b4575f80fd5b6104bd84610480565b92506104cb60208501610480565b9150604084015163ffffffff811681146104e3575f80fd5b809150509250925092565b5f602082840312156104fe575f80fd5b815161050981610362565b939250505056fea26469706673582212201fe6ad4d6b89d204db5394bdedef23d10ed8c7e4f83be4c5fe14dcc09470223464736f6c63430008190033","methodIdentifiers":{"getPrice(address,address,bytes)":"355efdd9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDenominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"CoW Protocol Developers\",\"details\":\"This contract creates an oracle that is compatible with the IPriceOracle interface and can be used by a CoW AMM to determine the current price of the traded tokens on specific Uniswap v2 pools.\",\"kind\":\"dev\",\"methods\":{\"getPrice(address,address,bytes)\":{\"details\":\"Calling this function returns the price of token1 in terms of token0 as a fraction (numerator, denominator). For example, in a pool where token0 is DAI, token1 is ETH, and ETH is worth 2000 DAI, valid output tuples would be (2000, 1), (20000, 10), ...To keep the risk of multiplication overflow to a minimum, we recommend to use return values that fit the size of a uint128.\",\"params\":{\"data\":\"Any additional data that may be required by the specific oracle implementation. For example, it could be a specific pool id for balancer, or the address of a specific price feed for Chainlink. We recommend this data be implemented as the abi-encoding of a dedicated data struct for ease of type-checking and decoding the input.\",\"token0\":\"The first token, whose price is determined based on the second token.\",\"token1\":\"The second token; the price of the first token is determined relative to this token.\"},\"returns\":{\"priceDenominator\":\"The denominator of the price, expressed in amount of token1 per amount of token0.\",\"priceNumerator\":\"The numerator of the price, expressed in amount of token1 per amount of token0.\"}}},\"title\":\"CoW AMM UniswapV2 Price Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/oracles/UniswapV2PriceOracle.sol\":\"UniswapV2PriceOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":@openzeppelin/=lib/composable-cow/lib/@openzeppelin/\",\":@openzeppelin/contracts/=lib/composable-cow/lib/@openzeppelin/contracts/\",\":balancer/=lib/composable-cow/lib/balancer/src/\",\":canonical-weth/=lib/composable-cow/lib/canonical-weth/src/\",\":composable-cow/=lib/composable-cow/\",\":cowprotocol/=lib/composable-cow/lib/cowprotocol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/composable-cow/lib/balancer/src/lib/helpers/\",\":math/=lib/composable-cow/lib/balancer/src/lib/math/\",\":murky/=lib/composable-cow/lib/murky/src/\",\":openzeppelin-contracts/=lib/composable-cow/lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":safe/=lib/composable-cow/lib/safe/\",\":uniswap-v2-core/=lib/uniswap-v2-core/contracts/\",\"lib/composable-cow:@openzeppelin/=lib/openzeppelin/contracts/\",\"lib/composable-cow:@openzeppelin/contracts/=lib/openzeppelin/contracts/\",\"lib/composable-cow:cowprotocol/=lib/composable-cow/lib/cowprotocol/src/contracts/\",\"lib/composable-cow:safe/=lib/composable-cow/lib/safe/contracts/\"]},\"sources\":{\"lib/uniswap-v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"src/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xf954ab9dc44a0ce3612b65d803b59c3fe1f64803870328580c36802460c8c29e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7cef4a090daa870e3c8cfa5d6498efae96427d4fe4e1a2784d26c088eea920e2\",\"dweb:/ipfs/QmU56CEHqif11NaomtVBNqrBTsV6CPPvjfN88SCe7V1Uxu\"]},\"src/oracles/UniswapV2PriceOracle.sol\":{\"keccak256\":\"0xd609e84287558861dd13aaea60b49f06261f6e098b10fe1b1dbb29441b655bf2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6cc7fc5cea18e21d3807a9691318e398f83192aefc33b96f8085444788d8471a\",\"dweb:/ipfs/QmfQA5CZoqqkeghrztAs8C6rVSSCiCdaDhHQPJqG83UjRs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"getPrice","outputs":[{"internalType":"uint256","name":"priceNumerator","type":"uint256"},{"internalType":"uint256","name":"priceDenominator","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getPrice(address,address,bytes)":{"details":"Calling this function returns the price of token1 in terms of token0 as a fraction (numerator, denominator). For example, in a pool where token0 is DAI, token1 is ETH, and ETH is worth 2000 DAI, valid output tuples would be (2000, 1), (20000, 10), ...To keep the risk of multiplication overflow to a minimum, we recommend to use return values that fit the size of a uint128.","params":{"data":"Any additional data that may be required by the specific oracle implementation. For example, it could be a specific pool id for balancer, or the address of a specific price feed for Chainlink. We recommend this data be implemented as the abi-encoding of a dedicated data struct for ease of type-checking and decoding the input.","token0":"The first token, whose price is determined based on the second token.","token1":"The second token; the price of the first token is determined relative to this token."},"returns":{"priceDenominator":"The denominator of the price, expressed in amount of token1 per amount of token0.","priceNumerator":"The numerator of the price, expressed in amount of token1 per amount of token0."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/composable-cow/lib/@openzeppelin/","@openzeppelin/contracts/=lib/composable-cow/lib/@openzeppelin/contracts/","balancer/=lib/composable-cow/lib/balancer/src/","canonical-weth/=lib/composable-cow/lib/canonical-weth/src/","composable-cow/=lib/composable-cow/","cowprotocol/=lib/composable-cow/lib/cowprotocol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","helpers/=lib/composable-cow/lib/balancer/src/lib/helpers/","math/=lib/composable-cow/lib/balancer/src/lib/math/","murky/=lib/composable-cow/lib/murky/src/","openzeppelin-contracts/=lib/composable-cow/lib/murky/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin/","safe/=lib/composable-cow/lib/safe/","uniswap-v2-core/=lib/uniswap-v2-core/contracts/","lib/composable-cow:@openzeppelin/=lib/openzeppelin/contracts/","lib/composable-cow:@openzeppelin/contracts/=lib/openzeppelin/contracts/","lib/composable-cow:cowprotocol/=lib/composable-cow/lib/cowprotocol/src/contracts/","lib/composable-cow:safe/=lib/composable-cow/lib/safe/contracts/"],"optimizer":{"enabled":true,"runs":100000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/oracles/UniswapV2PriceOracle.sol":"UniswapV2PriceOracle"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/uniswap-v2-core/contracts/interfaces/IUniswapV2Pair.sol":{"keccak256":"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b","urls":["bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf","dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH"],"license":null},"src/interfaces/IPriceOracle.sol":{"keccak256":"0xf954ab9dc44a0ce3612b65d803b59c3fe1f64803870328580c36802460c8c29e","urls":["bzz-raw://7cef4a090daa870e3c8cfa5d6498efae96427d4fe4e1a2784d26c088eea920e2","dweb:/ipfs/QmU56CEHqif11NaomtVBNqrBTsV6CPPvjfN88SCe7V1Uxu"],"license":"GPL-3.0"},"src/oracles/UniswapV2PriceOracle.sol":{"keccak256":"0xd609e84287558861dd13aaea60b49f06261f6e098b10fe1b1dbb29441b655bf2","urls":["bzz-raw://6cc7fc5cea18e21d3807a9691318e398f83192aefc33b96f8085444788d8471a","dweb:/ipfs/QmfQA5CZoqqkeghrztAs8C6rVSSCiCdaDhHQPJqG83UjRs"],"license":"GPL-3.0"}},"version":1},"id":178}

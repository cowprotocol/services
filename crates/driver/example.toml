[[solver]]
name = "mysolver" # Arbitrary name given to this solver, must be unique
endpoint = "http://0.0.0.0:7872"
absolute-slippage = "40000000000000000" # Denominated in wei, optional
relative-slippage = "0.1" # Percentage in the [0, 1] range
account = "0x0000000000000000000000000000000000000000000000000000000000000001" # The private key of the solver

[solver.request-headers]
fake-header-one = "FAKE-HEADER-VALUE" # For instance an authorization token which must be provided on each request

# [[solver]] # And so on, specify as many solvers as needed
# name = "othersolver"
# endpoint = "http://localhost:1235"
# relative-slippage = "0.1"
# account = "0x0000000000000000000000000000000000000000000000000000000000000002"

[submission]
gas-price-cap = "1000000000000"

[[submission.mempool]]
mempool = "public"
revert-protection = true

[[submission.mempool]]
mempool = "mev-blocker"
url = "https://your.custom.rpc.endpoint"
max-additional-tip = "5000000000"
additional-tip-percentage = 0.05
use-soft-cancellations = true

[contracts] # Optionally override the contract addresses, necessary on less popular blockchains
gp-v2-settlement = "0x9008D19f58AAbD9eD0D60971565AA8510560ab41"
weth = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"

[liquidity]
base-tokens = [
    "0xDEf1CA1fb7FBcDC777520aa7f396b4E015F497aB",
    "0x6B175474E89094C44Da98b954EedeAC495271d0F",
]
# [[liquidity.uniswap-v2]] # Uniswap V2 configuration
# preset = "uniswap-v2" # or "sushi-swap", "honeyswap", "baoswap", "pancake-swap", etc.

# [[liquidity.uniswap-v2]] # Custom Uniswap V2 configuration
# router = "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
# pool-code = "0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f"

# [[liquidity.swapr]] # Swapr configuration
# preset = "swapr"

# [[liquidity.swapr]] # Custom Swapr configuration
# router = "0xb9960d9bca016e9748be75dd52f02188b9d0829f"
# pool-code = "0xd306a548755b9295ee49cc729e13ca4a45e00199bbd890fa146da43a50571776"

# [[liquidity.uniswap-v2]] # Uniswap V2 configuration
# preset = "uniswap-v2" # or "sushi-swap", "honeyswap", "baoswap", "pancake-swap", etc.

# [[liquidity.uniswap-v2]] # Custom Uniswap V2 configuration
# router = "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
# pool-code = "0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f"

# [[liquidity.balancer-v2]] # Balancer V2 configuration
# preset = "balancer-v2"
# graph-url = "http://localhost:1234" # which subgraph url to fetch the data from
# pool-deny-list = [] # optional

# [[liquidity.balancer-v2]] # Custom Balancer V2 configuration
# vault = "0xBA12222222228d8Ba445958a75a0704d566BF2C8"
# weighted = [] # weighted pool factory addresses
# stable = [] # stable pool factory addresses
# liquidity-bootstrapping = [] # liquidity bootstrapping pool factory addresses
# pool-deny-list = [] # which pools to ignore

# [[liquidity.uniswap-v3]] # Uniswap V3 configuration
# preset = "uniswap-v3"
# graph-url = "http://localhost:1234" # which subgraph url to fetch the data from
# max_pools_to_initialize = 100 # how many of the deepest pools to initialise on startup

# [[liquidity.uniswap-v3]] # Custom Uniswap V3 configuration
# router = "0xE592427A0AEce92De3Edee1F18E0157C05861564"
# max_pools_to_initialize = 100 # how many of the deepest pools to initialise on startup

# [enso]
# url = "http://localhost:8454"
# network-block-interval = "12s"
